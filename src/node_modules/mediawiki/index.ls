require! {
	std

	'renderer'
}

{Renderer} = renderer



class MediaWiki extends Renderer
	~>
		@ <<< {
			emphaseChar: '\''
			italicX: 2
			boldX: 3
		}



	############################################################################
	# Section
	############################################################################

	section: (title, level) ->
		# Input arguments processing -------------------------------------------

		# ---------------------------------------------------------------- level
		level ?= 1

		# Processing -----------------------------------------------------------

		# ---------------------------------------------------------------- marks
		marks = '=' * level
		# --------------------------------------------------------------- output
		output = "#marks #title #marks"

		# Return ---------------------------------------------------------------

		output



	############################################################################
	# List
	############################################################################

	list-item: (text, level) ->
		# Input arguments processing -------------------------------------------

		# ---------------------------------------------------------------- level
		level ?= 1

		# Processing -----------------------------------------------------------

		# --------------------------------------------------------------- prefix
		prefix = '*' * level
		# --------------------------------------------------------------- output
		output = "#prefix #text"

		# Return ---------------------------------------------------------------

		output



	############################################################################
	# Links
	############################################################################

	escapeMap = {
		'%20': /\ /g
		'%3D': /\=/g
		'%5B': /\[/g
		'%5D': /\]/g
	}

	escapeUrl: (url) ->
		# Processing -----------------------------------------------------------

		output = url

		for substitute, pattern of escapeMap
			output .= replace pattern, substitute

		# Return ---------------------------------------------------------------

		output

	url: (url, text) ->
		# Input arguments processing -------------------------------------------

		# ----------------------------------------------------------------- text
		text ?= url

		# Processing -----------------------------------------------------------

		# ------------------------------------------------------------------ url
		url = @escapeUrl url
		# --------------------------------------------------------------- output
		output = "[#url #text]"

		# Return ---------------------------------------------------------------

		output

	link: (page, text) ->
		# Input arguments processing -------------------------------------------
		text ?= page

		# Processing -----------------------------------------------------------

		output = "[[#page|#text]]"

		# Return ---------------------------------------------------------------

		output





std.packager.export {
	module

	values: [
		{
			value: MediaWiki
			names: <[
				MediaWiki
				Mediawiki
				MW
			]>
		}
	]
}
